#!/bin/bash

function globalHeader() {
cat << EOF
# Specifies TCP timeout on connect for use by the frontend ft_redis
# Set the max time to wait for a connection attempt to a server to succeed
# The server and client side expected to acknowledge or send data.
defaults REDIS
mode tcp
timeout connect 3s
timeout server 9s
timeout client 9s
timeout tunnel 7d
EOF
}

function serviceHeader() {
    PORT=$1
cat << EOF

# Specifies listening socket for accepting client connections using the default
# REDIS TCP timeout and backend bk_redis TCP health check.
frontend ft_redis_$PORT
bind $BIND_ADDRESS:$PORT name redis
default_backend bk_redis_$PORT

# Specifies the backend Redis proxy server TCP health settings
# Ensure it only forward incoming connections to reach a master.
backend bk_redis_$PORT
option tcp-check
tcp-check connect
tcp-check send PING\r\n
tcp-check expect string +PONG
tcp-check send info\ replication\r\n
tcp-check expect string role:master
tcp-check send QUIT\r\n
tcp-check expect string +OK
EOF
}

function serverDefinitions() {
  NAME=$1
  SERVERS=$2
  N=0
  for i in $SERVERS; do
    SERVER=(${i//:/ })
    SERVER_HOST=${SERVER[0]}
    SERVER_PORT=${SERVER[1]}
    if [ -z $SERVER_PORT ]; then SERVER_PORT=6379; fi
    ((N++))
    echo "server p$NAME-$N $SERVER_HOST:$SERVER_PORT check inter 1s"
  done
}

function makeConfig() {
  globalHeader
  for i in $1; do
    PORT=`echo $i | cut -d: -f1`
    SERVERS=`echo $i | cut -d: -f2- | sed 's/,/ /g'`
    serviceHeader $PORT
    serverDefinitions $PORT "$SERVERS"
  done
}

CONFIG="$@"
makeConfig "$CONFIG"
